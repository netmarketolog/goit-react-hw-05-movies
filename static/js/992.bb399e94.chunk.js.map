{"version":3,"file":"static/js/992.bb399e94.chunk.js","mappings":"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","sources":["components/FilmCard/FilmCard.styled.js","components/FilmCard/FilmCard.js","components/Pages/Movies/Movies.js","components/Pages/Movies/Movies.styled.js","components/api/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledList = styled.li`\n  list-style: none;\n  width: 300px;\n  cursor: pointer;\n  text-decoration: none;\n`;\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  width: 100%;\n`;\nexport const Poster = styled.img`\n  display: block;\n  width: 300px;\n  height: 460px;\n  cursor: pointer;\n  transition: 0.3s;\n\n  :hover {\n    background: linear-gradient(to bottom, #e8edec, #d2d1d3);\n    box-shadow: 0px 3px 20px 0px black;\n    transform: scale(1.05);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport error from '../img/error.png';\nimport { StyledList, Link, Poster } from './FilmCard.styled';\nimport PropTypes from 'prop-types';\n\nexport const FilmCard = ({ posterPath, title, movieId }) => {\n  const location = useLocation();\n  const filmPoster = `https://image.tmdb.org/t/p/w500/${posterPath}`;\n  return (\n    <StyledList>\n      <Link to={`/movies/${movieId}`} state={{ from: location }}>\n        <Poster src={posterPath ? filmPoster : error} alt={title} />\n      </Link>\n      <h2>{title}</h2>\n    </StyledList>\n  );\n};\n\nFilmCard.propTypes = {\n  posterPath: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  movieId: PropTypes.number.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'components/api/api';\nimport { FilmCard } from 'components/FilmCard/FilmCard';\nimport { HiSearch } from 'react-icons/hi';\nimport {\n  Section,\n  Form,\n  StyledInput,\n  SearchButton,\n  List,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const search = searchParams.get('search');\n\n  const inputValue = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    if (!search) return;\n    setStatus('loading');\n\n    searchMovies(search).then(resp => {\n      if (resp.data.total_results === 0) setStatus('error');\n      setFilms(resp.filmList);\n      setStatus('resolved');\n    });\n  }, [search]);\n\n  const formSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') return;\n    setSearchParams({ search: query });\n    setQuery('');\n  };\n  return (\n    <Section>\n      <Form onSubmit={formSubmit}>\n        <label>\n          <StyledInput\n            type=\"text\"\n            value={query}\n            placeholder=\"Type your request\"\n            onInput={inputValue}\n          />\n        </label>\n        <SearchButton type=\"submit\">\n          <HiSearch size=\"30px\" />\n        </SearchButton>\n      </Form>\n      {status === 'resolved' && films.length > 0 && (\n        <List>\n          {films.map(film => {\n            const { id, poster_path, title, name } = film;\n            return (\n              <FilmCard\n                key={id}\n                posterPath={poster_path}\n                title={title ?? name}\n                movieId={id}\n              />\n            );\n          })}\n        </List>\n      )}\n    </Section>\n  );\n};\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 100%;\n  margin: 0 auto;\n  padding: 30px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\nexport const StyledInput = styled.input`\n  width: 400px;\n  border: 0px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.4);\n  padding: 15px;\n  margin-right: 20px;\n`;\nexport const SearchButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 20px;\n  background-color: rgba(0, 0, 0, 0.4);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  width: 100px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  :focus {\n    background: linear-gradient(to bottom, #e8edec, #d2d1d3);\n    box-shadow: 0px 3px 20px 0px black;\n    transform: scale(1.05);\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\nexport const List = styled.ul`\n  padding: 30px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n","import axios from 'axios';\n\nconst API_KEY = '?api_key=8fa17eefa9c2b424e1a30217c39bc412';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport async function trendingFilm() {\n  const url = `${URL}trending/movie/day${API_KEY}`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmList = await data.results;\n\n  return filmList;\n}\nexport async function searchMovies(searchQuery) {\n  const url = `${URL}search/movie${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`;\n  const response = await axios.get(url);\n  const data = await response.data;\n  const filmList = await data.results;\n\n  return { filmList, data };\n}\n\nexport async function movieDetails(movieId) {\n  const url = `${URL}movie/${movieId}${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  const data = await response.data;\n\n  return data;\n}\n\nexport async function movieCast(movieId) {\n  const url = `${URL}movie/${movieId}/credits${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  const data = await response.data;\n  const cast = await data.cast;\n\n  return cast;\n}\n\nexport async function movieReviews(movieId) {\n  const url = `${URL}movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url);\n  const data = await response.data;\n  const filmList = await data.results;\n\n  return filmList;\n}\n"],"names":["StyledList","styled","Link","NavLink","Poster","FilmCard","posterPath","title","movieId","location","useLocation","filmPoster","to","state","from","src","error","alt","useState","query","setQuery","films","setFilms","status","setStatus","useSearchParams","searchParams","setSearchParams","search","get","useEffect","searchMovies","then","resp","data","total_results","filmList","onSubmit","e","preventDefault","trim","type","value","placeholder","onInput","target","toLowerCase","size","length","map","film","id","poster_path","name","Section","Form","StyledInput","SearchButton","List","API_KEY","URL","trendingFilm","url","axios","results","searchQuery","response","movieDetails","movieCast","cast","movieReviews"],"sourceRoot":""}