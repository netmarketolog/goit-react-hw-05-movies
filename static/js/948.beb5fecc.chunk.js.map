{"version":3,"file":"static/js/948.beb5fecc.chunk.js","mappings":"4PAEaA,EAAWC,EAAAA,GAAAA,GAAH,mFAKRC,EAAYD,EAAAA,GAAAA,IAAH,2DAKTE,EAAWF,EAAAA,GAAAA,GAAH,oG,SCsBrB,EA5Ba,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,WACHF,IAELG,EAAAA,EAAAA,IAAUH,GAASI,KAAKL,EACzB,GAAE,CAACC,KAGF,SAACP,EAAD,UACGK,EAAOO,KAAI,SAAAC,GACV,IAAMC,EAAG,yCAAqCD,EAAME,cAC5CC,EAAsCH,EAAtCG,GAAID,EAAkCF,EAAlCE,aAAcE,EAAoBJ,EAApBI,KAAMC,EAAcL,EAAdK,UAEhC,OACE,UAACf,EAAD,YACE,SAACD,EAAD,CAAWiB,IAAKJ,EAAeD,EAAMM,EAAOC,IAAKJ,KACjD,wBAAKA,KACL,uCAAeC,OAHFF,EAMlB,KAGN,C,8LC9BKM,EAAU,4CACVC,EAAM,gCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,iGACCC,EADD,UACUF,EADV,6BACkCD,GADlC,SAEcI,EAAAA,GAAAA,IAAUD,GAFxB,cAECE,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,gBAIkBA,EAAKC,QAJvB,cAICC,EAJD,yBAMEA,GANF,mEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,oFACCP,EADD,UACUF,EADV,uBAC4BD,EAD5B,iCAC4DU,EAD5D,wCAEkBN,EAAAA,GAAAA,IAAUD,GAF5B,cAECQ,EAFD,gBAGcA,EAASL,KAHvB,cAGCA,EAHD,gBAIkBA,EAAKC,QAJvB,cAICC,EAJD,yBAME,CAAEA,SAAAA,EAAUF,KAAAA,IANd,mEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4B3B,GAA5B,kFACCkB,EADD,UACUF,EADV,iBACsBhB,GADtB,OACgCe,EADhC,4BAEkBI,EAAAA,GAAAA,IAAUD,GAF5B,cAECQ,EAFD,gBAGcA,EAASL,KAHvB,cAGCA,EAHD,yBAKEA,GALF,kEAQA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,oFACCkB,EADD,UACUF,EADV,iBACsBhB,EADtB,mBACwCe,EADxC,4BAEkBI,EAAAA,GAAAA,IAAUD,GAF5B,cAECQ,EAFD,gBAGcA,EAASL,KAHvB,cAGCA,EAHD,gBAIcA,EAAKO,KAJnB,cAICA,EAJD,yBAMEA,GANF,mEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4B7B,GAA5B,oFACCkB,EADD,UACUF,EADV,iBACsBhB,EADtB,mBACwCe,EADxC,mCAEkBI,EAAAA,GAAAA,IAAUD,GAF5B,cAECQ,EAFD,gBAGcA,EAASL,KAHvB,cAGCA,EAHD,gBAIkBA,EAAKC,QAJvB,cAICC,EAJD,yBAMEA,GANF,mE","sources":["components/Pages/Movies/Cast/cast.styled.js","components/Pages/Movies/Cast/Cast.js","components/api/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n`;\nexport const CastPhoto = styled.img`\n  width: 200px;\n  padding: 20px;\n`;\n\nexport const CastItem = styled.li`\n  :not(:last-child) {\n    margin-right: 20px;\n    list-style: none;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieCast } from 'components/api/api';\nimport error from '../../../img/error.png';\nimport { CastList, CastPhoto, CastItem } from './cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    movieCast(movieId).then(setActors);\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {actors.map(actor => {\n        const img = `https://image.tmdb.org/t/p/w500${actor.profile_path}`;\n        const { id, profile_path, name, character } = actor;\n\n        return (\n          <CastItem key={id}>\n            <CastPhoto src={profile_path ? img : error} alt={name} />\n            <h2>{name}</h2>\n            <p>Character: {character}</p>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '?api_key=8fa17eefa9c2b424e1a30217c39bc412';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport async function trendingFilm() {\n  const url = `${URL}trending/movie/day${API_KEY}`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmList = await data.results;\n\n  return filmList;\n}\nexport async function searchMovies(searchQuery) {\n  const url = `${URL}search/movie${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`;\n  const response = await axios.get(url);\n  const data = await response.data;\n  const filmList = await data.results;\n\n  return { filmList, data };\n}\n\nexport async function movieDetails(movieId) {\n  const url = `${URL}movie/${movieId}${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  const data = await response.data;\n\n  return data;\n}\n\nexport async function movieCast(movieId) {\n  const url = `${URL}movie/${movieId}/credits${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  const data = await response.data;\n  const cast = await data.cast;\n\n  return cast;\n}\n\nexport async function movieReviews(movieId) {\n  const url = `${URL}movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url);\n  const data = await response.data;\n  const filmList = await data.results;\n\n  return filmList;\n}\n"],"names":["CastList","styled","CastPhoto","CastItem","useState","actors","setActors","movieId","useParams","useEffect","movieCast","then","map","actor","img","profile_path","id","name","character","src","error","alt","API_KEY","URL","trendingFilm","url","axios","resp","data","results","filmList","searchMovies","searchQuery","response","movieDetails","cast","movieReviews"],"sourceRoot":""}